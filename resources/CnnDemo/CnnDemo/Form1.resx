<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QBORXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAAYAAAALAAAAABVTklDT0RFAAA0AGEAZAA5ADMAZQA3ADUAAP/+ACI0YWQ5M2U3NQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAP/bAEMAEAsMDgwKEA4NDhIREBMYKBoYFhYYMSMlHSg6Mz08OTM4N0BIXE5A
        RFdFNzhQbVFXX2JnaGc+TXF5cGR4XGVnY//bAEMBERISGBUYLxoaL2NCOEJjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY//AABEIADUAggMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/AE1G51TTtcaAX1y2X3IcltwboNvT26V0Wi66t9K9pcr5V3GT8pUrvA7g
        Hofb/IzPGmnTzS295bxvIQvluFGcc5HH4n9KryWVzf2kd/GFtr22X5lKFXYryMAAD6ce2a9RqnVpRb0/
        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
</value>
  </data>
</root>